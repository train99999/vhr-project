<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quan.vhr.mapper.MenuMapper">
  <resultMap id="BaseResultMap" type="com.quan.vhr.bean.Menu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="iconCls" jdbcType="VARCHAR" property="iconCls" />
    <result column="parentId" jdbcType="INTEGER" property="parentId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <association property="meta" javaType="com.quan.vhr.bean.Meta">
      <result column="keepAlive" property="keepAlive" jdbcType="BIT"></result>
      <result column="requireAuth" property="requireAuth" jdbcType="BIT"></result>
    </association>
  </resultMap>
  <resultMap id="Menus2" type="com.quan.vhr.bean.Menu" extends="BaseResultMap">
    <collection property="children" ofType="com.quan.vhr.bean.Menu">
      <id column="id2" jdbcType="INTEGER" property="id" />
      <result column="url2" jdbcType="VARCHAR" property="url" />
      <result column="path2" jdbcType="VARCHAR" property="path" />
      <result column="component2" jdbcType="VARCHAR" property="component" />
      <result column="name2" jdbcType="VARCHAR" property="name" />
      <result column="iconCls2" jdbcType="VARCHAR" property="iconCls" />
      <result column="parentId2" jdbcType="INTEGER" property="parentId" />
      <result column="enabled2" jdbcType="BIT" property="enabled" />
      <association property="meta" javaType="com.quan.vhr.bean.Meta">
        <result column="keepAlive2" property="keepAlive" jdbcType="BIT"></result>
        <result column="requireAuth2" property="requireAuth" jdbcType="BIT"></result>
      </association>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
  </sql>
  <select id="selectByExample" parameterType="com.quan.vhr.bean.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.quan.vhr.bean.MenuExample">
    delete from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quan.vhr.bean.Menu">
    insert into menu (id, url, path, 
      component, name, iconCls, 
      keepAlive, requireAuth, parentId, 
      enabled)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconcls,jdbcType=VARCHAR}, 
      #{keepalive,jdbcType=BIT}, #{requireauth,jdbcType=BIT}, #{parentid,jdbcType=INTEGER}, 
      #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.quan.vhr.bean.Menu">
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="iconcls != null">
        iconCls,
      </if>
      <if test="keepalive != null">
        keepAlive,
      </if>
      <if test="requireauth != null">
        requireAuth,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconcls != null">
        #{iconcls,jdbcType=VARCHAR},
      </if>
      <if test="keepalive != null">
        #{keepalive,jdbcType=BIT},
      </if>
      <if test="requireauth != null">
        #{requireauth,jdbcType=BIT},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quan.vhr.bean.MenuExample" resultType="java.lang.Long">
    select count(*) from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

    <select id="getMenusByHrId" resultMap="Menus2">
        SELECT DISTINCT
          m1.*,m2.id AS id2,m2.component AS component2,m2.enabled AS enabled2,m2.iconCls AS iconCls2,
          m2.keepAlive AS keepAlive2,m2.name AS name2,m2.parentId AS parentId2,m2.requireAuth AS requireAuth,m2.path AS path2
          FROM menu m1,menu m2,hr_role hrr,menu_role mr
          WHERE
          m1.id=m2.parentId
          AND
          hrr.hrid=#{hrid}
          AND
          hrr.rid=mr.rid
          AND
          mr.mid=m2.id
          AND
          m2.enabled=TRUE
          ORDER BY
          m1.id,m2.id
    </select>

  <resultMap id="MenuWithRole" type="com.quan.vhr.bean.Menu" extends="BaseResultMap">
    <collection property="roles" ofType="com.quan.vhr.bean.Role">
      <id column="rid" property="id"></id>
      <result column="rname" property="name"></result>
      <result column="rnameZh" property="namezh"></result>
    </collection>
  </resultMap>
  <select id="getAllMenusWithRole" resultMap="MenuWithRole">
    SELECT m.*,r.id AS rid,r.name AS rname,r.nameZh AS rnameZh
    FROM menu m,menu_role mr,role r
    WHERE m.id=mr.mid AND mr.rid=r.id
    ORDER BY m.id
  </select>
  <resultMap id="MenuWithChildren" type="com.quan.vhr.bean.Menu" extends="BaseResultMap">
    <id column="id1" property="id"></id>
    <result column="name1" property="name"></result>
    <collection property="children" ofType="com.quan.vhr.bean.Menu">
      <id column="id2" property="id"></id>
      <result column="name2" property="name"></result>
      <collection property="children" ofType="com.quan.vhr.bean.Menu">
        <id column="id3" property="id"></id>
        <result column="name3" property="name"></result>
      </collection>
    </collection>
  </resultMap>
  <select id="getAllMenus" resultMap="MenuWithChildren">
    SELECT
    m1.id AS id1,m1.name AS name1,
    m2.id AS id2,m2.name AS name2,
    m3.id AS id3,m3.name AS name3
    FROM menu m1,menu m2,menu m3 WHERE m1.id=m2.parentid AND m2.id = m3.parentid
    AND m3.enabled = TRUE
    ORDER BY m1.id,m2.id,m3.id
  </select>
  <select id="getMidsByRid" resultType="java.lang.Integer">
    select mid from menu_role where rid=#{rid}
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null">
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.iconcls != null">
        iconCls = #{record.iconcls,jdbcType=VARCHAR},
      </if>
      <if test="record.keepalive != null">
        keepAlive = #{record.keepalive,jdbcType=BIT},
      </if>
      <if test="record.requireauth != null">
        requireAuth = #{record.requireauth,jdbcType=BIT},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update menu
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      iconCls = #{record.iconcls,jdbcType=VARCHAR},
      keepAlive = #{record.keepalive,jdbcType=BIT},
      requireAuth = #{record.requireauth,jdbcType=BIT},
      parentId = #{record.parentid,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quan.vhr.bean.Menu">
    update menu
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconcls != null">
        iconCls = #{iconcls,jdbcType=VARCHAR},
      </if>
      <if test="keepalive != null">
        keepAlive = #{keepalive,jdbcType=BIT},
      </if>
      <if test="requireauth != null">
        requireAuth = #{requireauth,jdbcType=BIT},
      </if>
      <if test="parentid != null">
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quan.vhr.bean.Menu">
    update menu
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      iconCls = #{iconcls,jdbcType=VARCHAR},
      keepAlive = #{keepalive,jdbcType=BIT},
      requireAuth = #{requireauth,jdbcType=BIT},
      parentId = #{parentid,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>